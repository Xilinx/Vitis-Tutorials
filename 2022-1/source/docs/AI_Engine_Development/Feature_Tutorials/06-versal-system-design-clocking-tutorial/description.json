{
    "name": "AI_Engine_Development-06-versal-system-design-clocking-tutorial",
    "description": "06-versal-system-design-clocking-tutorial",
    "flow": "versal",

    "platform_allowlist": [ "vck190"],
    "platform_blocklist": [],

    "testinfo": {
        "disable": false,
        "jobs": [
            {
                "index": 0,
                "dependency": [],
                "env": "",
                "cmd": "",
                "max_memory_MB": 32768,
                "max_time_min": {
                    "vitis_aie_sim": 50,
                    "vitis_aie_x86sim": 50,
                    "vitis_hw_build": 470,
                    "vitis_hw_emu": 200,
                    "vitis_hw_run": 30
                }
            }
        ],
        "targets": [
            "vitis_hw_emu",
            "vitis_hw_build",
            "vitis_hw_run"
        ],
        "category": "canary",
        "make_options": [
            "CXX=${XILINX_VITIS}/gnu/aarch64/lin/aarch64-linux/bin/aarch64-linux-gnu-g++",
            "HOST_ARCH=aarch64",
            "EDGE_COMMON_SW=${EDGE_COMMON_SW}",
            "SYSROOT=${SYSROOT}",
            "EMU_CMD=\\\"./launch_hw_emu.sh -run-app embedded_exec.sh\\\"",
            "EMBEDDED_PACKAGE_OUT=./sw", 
            "EMBEDDED_EXEC_SCRIPT=./embedded_exec.sh"
        ],
        "custom_build_target":
        {
            "all": "run",
            "hw" : "sd_card"
        },
        "custom_board_target": "run_test",
        "tasks": {
            "board": {
                "pre_exec": "./env_setup.sh"
            },
            "build": {
                "pre_exec": "./env_setup.sh"
            }
        }
    },
    "host": {
       "host_exe": "host",
        "compiler": {
            "sources": [
                "./sw/host.cpp",
                "./Work/ps/c_rts/aie_control_xrt.cpp"
            ], 
            "includepaths": [
                "$(SYSROOT)/usr/include/xrt/",
                "./sw",
                "./aie" 
            ],
            "options": "--sysroot=$(SYSROOT)"
        },
        "linker": {
            "librarypaths": [
                "$(SYSROOT)/usr/lib/",
                "xaiengine",
                "adf_api_xrt",
                "xrt_core",
                "xrt_coreutil",
                "${XILINX_VITIS}/aietools/lib/aarch64.o"
            ],
            "options": "--sysroot=$(SYSROOT)"
        }
    },
     "aiecompiler": {
        "compiler": {
            "includepaths": [
                "./aie"
            ]
        }
    },
    "aiecontainers": [
        {
            "accelerators": [
                {
                    "location": "./aie/graph.cpp",
                    "pl-freq": 100,
                    "workdir": "./Work",
                    "name": "libadf.a",
                    "aie_kernel_files":[
                        "./aie/kernels/polar_clip.cpp",
                        "./aie/kernels/classifiers/classify.cc", 
                        "./aie/kernels/decimators/hb27.cc", 
                        "./aie/kernels/interpolators/hb27_2i.cc"    
                    ]
                }
            ]
        }
    ],
   "data": [
        "PROJECT/data/golden.txt",
        "PROJECT/data/input.txt"
    ],
    "v++": {
        "linker": {
                    "cflags": [
                        "--config PROJECT/system.cfg"
                    ]
                },
        "package": {
                    "cflags": [
                        "--package.defer_aie_run"
                    ]
                }
     },
     "containers": [
        {
            "accelerators": [
                {
                    "name": "mm2s", 
                    "location": "pl_kernels/mm2s.cpp"
                }, 
                {
                    "name": "s2mm", 
                    "location": "pl_kernels/s2mm.cpp"
                }, 
                {
                    "name": "polar_clip", 
                    "location": "pl_kernels/polar_clip.cpp"
                } 
            ], 
            "name": "tutorial"
        }
    ],
    "config_make" : "./system.cfg",
    "launch": [
        {
            "name": "generic launch for all flows"
        }
    ],
    "contributors": [
        {
            "url": "http://www.xilinx.com", 
            "group": "Xilinx"
        }
    ]
}
