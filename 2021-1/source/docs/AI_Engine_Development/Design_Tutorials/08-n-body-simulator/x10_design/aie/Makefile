# Copyright 2021 Xilinx Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

.PHONY: help

help::
	@echo "Makefile Usage:"
	@echo "  make all "
	@echo "       Runs make aie"
	@echo ""
	@echo "  make aie "
	@echo "       Command to run aiecompiler and create libadf.a"
	@echo ""
	@echo "  make sim "
	@echo "       Command to run aiesimulator with data/input_i.txt and"
	@echo "       data/input_j.txt"
	@echo ""
	@echo "  make clean "
	@echo "      Command to remove the generated files."
	@echo ""

# #########################################################################
#            Makefile used for AIE compilation and simulation 
# #########################################################################

# =========================================================
# PROJECT and MODULE REPOS
# =========================================================
#relative project directory
RELATIVE_PROJECT_DIR := ../

#absolute project directory
PROJECT_DIR	:= $(shell readlink -f $(RELATIVE_PROJECT_DIR))

AIE_DIR := $(PROJECT_DIR)/aie

# =========================================================
# NUMBER OF COMPUTE UNITS INSTANCES 
# x1   = 1   AIE TILE
# x10  = 10  AIE TILES
# X100 = 100 AIE TILES
# =========================================================
INST		= x10

# =========================================================
# AIE GRAPH
# =========================================================
GRAPH_CPP := $(AIE_DIR)/nbody_x4_$(INST).cpp 

# =========================================================
# DEPENDENCIES for make aie
# =========================================================
DEPS := $(GRAPH_CPP)
DEPS += $(AIE_DIR)/nbody_x4_$(INST).h
DEPS += $(AIE_DIR)/src/globals.h
DEPS += $(AIE_DIR)/src/include.h
DEPS += $(AIE_DIR)/src/kernels.h
DEPS += $(AIE_DIR)/src/nbody.cc
DEPS += $(AIE_DIR)/src/nbody_subsystem.h
DEPS += $(AIE_DIR)/src/transmit_new_i.cc 

# =========================================================
# OUTPUT PRODUCTS 
# =========================================================
BUILD_DIR := $(AIE_DIR)/build
WORK_DIR := $(BUILD_DIR)/Work_x4_$(INST)

# ################ TARGET: make all ################
all: aie

# ################ TARGET: make aie ################
aie: $(BUILD_DIR)/libadf.a

$(BUILD_DIR)/libadf.a: $(DEPS)
	mkdir -p $(BUILD_DIR); 				\
	cd $(BUILD_DIR);				\
	aiecompiler -v  --target=hw			\
	--stacksize=2000				\
	-include="$(XILINX_VITIS)/aietools/include" 	\
	-include="$(AIE_DIR)" 				\
	-include="$(AIE_DIR)/src"			\
	-include="$(PROJECT_DIR)/data" 			\
	$(GRAPH_CPP)					\
	-workdir=$(WORK_DIR)  | tee  $(BUILD_DIR)/aiecompiler_$(INST).log

# ################ TARGET: make sim ################
sim: $(BUILD_DIR)/aiesimulator_$(INST).log

$(BUILD_DIR)/aiesimulator_$(INST).log: aie
	cd $(BUILD_DIR);\
	aiesimulator --pkg-dir=$(WORK_DIR) | tee aiesimulator_$(INST).log

# ################ TARGET: make clean_sim ################
clean_sim: 
	rm -rf $(BUILD_DIR)/aiesimulator*
	rm -rf $(BUILD_DIR)/pl_sample_count*

# ################ TARGET: make clean ################
clean: 
	rm -rf $(BUILD_DIR)
