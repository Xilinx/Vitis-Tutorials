% Copyright (C) 2022, Advanced Micro Devices, Inc. All rights reserved.
% SPDX-License-Identifier: MIT

%% clean workspace

clear all;
close all;
clc;

%% memory allocation

DIM=32;
matOp1 = zeros([DIM, DIM]);
matOp2 = zeros([DIM, DIM]);
matRef = zeros([DIM, DIM]);

%% reference matrices with MATLAB

for r = 0 : DIM -1
    for c = 0 : DIM -1
      r1 = r + c;
      r2 = r * c;
      matOp1(r+1, c+1) = r1;
      matOp2(r+1, c+1) = r2;
    end
end
matRef = matOp1 * matOp2;

%% load files generated by ARM on ZCU102

I = load('matrix_inputs.txt');
Oif   = load('matrix_out_i_f.txt');
Obufs = load('matrix_out_bufs.txt');

%reshape data files
in1=I(:,1);
in2=I(:,2);
m1 = reshape(in1, [32,32])';
m2 = reshape(in2, [32,32])';
m3 = m1 * m2; % expected result

%% check differences ARM vs. MATLAB

diff1 = abs(m1 - matOp1);
sum_abs_diff1 = sum(diff1(:))
diff2 = abs(m2 - matOp2);
sum_abs_diff2 = sum(diff2(:))
diff3 = abs(m3 - matRef);
sum_abs_diff3 = sum(diff3(:))

%%
Oif_c1 = Oif(:, 1);
mat_Oif_c1 = reshape(Oif_c1, [DIM, DIM])';
Obufs_c2 = Obufs(:, 2);
mat_Obufs_c2 = reshape(Obufs_c2, [DIM, DIM])';
diff31 = abs(mat_Oif_c1 - mat_Obufs_c2);
sum_abs_diff31 = sum(diff31(:))

Oif_c2 = Oif(:, 2);
mat_Oif_c2 = reshape(Oif_c2, [DIM, DIM])';
diff32 = abs(m3 - mat_Oif_c2);
sum_abs_diff32 = sum(diff32(:))


Obufs_c1 = Obufs(:, 1);
mat_Obufs_c1 = reshape(Obufs_c1, [DIM, DIM])';
diff12 = abs(mat_Obufs_c1 - mat_Obufs_c2);
sum_abs_diff12 = sum(diff12(:))
